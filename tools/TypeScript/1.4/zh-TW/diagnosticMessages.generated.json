{
        "Unterminated string literal.": "Unterminated string literal.",
        "Identifier expected.": "必須有識別項。",
        "'{0}' expected.": "必須是 '{0}'。",
        "A file cannot have a reference to itself.": "檔案不能參考自己。",
        "Trailing comma not allowed.": "Trailing comma not allowed.",
        "'*/' expected.": "必須是 '*/'。",
        "Unexpected token.": "未預期的語彙基元。",
        "Catch clause parameter cannot have a type annotation.": "Catch 子句參數不能有類型註釋。",
        "A rest parameter must be last in a parameter list.": "A rest parameter must be last in a parameter list.",
        "Parameter cannot have question mark and initializer.": "參數不能有問號和初始設定式。",
        "A required parameter cannot follow an optional parameter.": "A required parameter cannot follow an optional parameter.",
        "An index signature cannot have a rest parameter.": "An index signature cannot have a rest parameter.",
        "An index signature parameter cannot have an accessibility modifier.": "An index signature parameter cannot have an accessibility modifier.",
        "An index signature parameter cannot have a question mark.": "An index signature parameter cannot have a question mark.",
        "An index signature parameter cannot have an initializer.": "An index signature parameter cannot have an initializer.",
        "An index signature must have a type annotation.": "An index signature must have a type annotation.",
        "An index signature parameter must have a type annotation.": "An index signature parameter must have a type annotation.",
        "An index signature parameter type must be 'string' or 'number'.": "An index signature parameter type must be 'string' or 'number'.",
        "A class or interface declaration can only have one 'extends' clause.": "A class or interface declaration can only have one 'extends' clause.",
        "An 'extends' clause must precede an 'implements' clause.": "An 'extends' clause must precede an 'implements' clause.",
        "A class can only extend a single class.": "A class can only extend a single class.",
        "A class declaration can only have one 'implements' clause.": "A class declaration can only have one 'implements' clause.",
        "Accessibility modifier already seen.": "已經有存取範圍修飾詞。",
        "'{0}' modifier must precede '{1}' modifier.": "'{0}' 修飾詞必須在 '{1}' 修飾詞之前。",
        "'{0}' modifier already seen.": "已經有 '{0}' 修飾詞。",
        "'{0}' modifier cannot appear on a class element.": "類別項目不能有 '{0}' 修飾詞。",
        "An interface declaration cannot have an 'implements' clause.": "An interface declaration cannot have an 'implements' clause.",
        "'super' must be followed by an argument list or member access.": "'super' must be followed by an argument list or member access.",
        "Only ambient modules can use quoted names.": "只有環境模組可以使用以引號括住的名稱。",
        "Statements are not allowed in ambient contexts.": "環境內容中不能有陳述式。",
        "A function implementation cannot be declared in an ambient context.": "A function implementation cannot be declared in an ambient context.",
        "A 'declare' modifier cannot be used in an already ambient context.": "A 'declare' modifier cannot be used in an already ambient context.",
        "Initializers are not allowed in ambient contexts.": "環境內容中不能有初始設定式。",
        "'{0}' modifier cannot appear on a module element.": "模組項目不能有 '{0}' 修飾詞。",
        "A 'declare' modifier cannot be used with an interface declaration.": "A 'declare' modifier cannot be used with an interface declaration.",
        "A 'declare' modifier is required for a top level declaration in a .d.ts file.": "A 'declare' modifier is required for a top level declaration in a .d.ts file.",
        "A rest parameter cannot be optional.": "A rest parameter cannot be optional.",
        "A rest parameter cannot have an initializer.": "A rest parameter cannot have an initializer.",
        "A 'set' accessor must have exactly one parameter.": "A 'set' accessor must have exactly one parameter.",
        "A 'set' accessor cannot have an optional parameter.": "A 'set' accessor cannot have an optional parameter.",
        "A 'set' accessor parameter cannot have an initializer.": "A 'set' accessor parameter cannot have an initializer.",
        "A 'set' accessor cannot have rest parameter.": "A 'set' accessor cannot have rest parameter.",
        "A 'get' accessor cannot have parameters.": "A 'get' accessor cannot have parameters.",
        "Accessors are only available when targeting ECMAScript 5 and higher.": "只有在以 ECMAScript 5 (含) 以上版本為目標時才能使用存取子。",
        "Enum member must have initializer.": "列舉成員必須有初始設定式。",
        "An export assignment cannot be used in an internal module.": "An export assignment cannot be used in an internal module.",
        "Ambient enum elements can only have integer literal initializers.": "環境列舉元素只能有整數常值初始設定式。",
        "Unexpected token. A constructor, method, accessor, or property was expected.": "Unexpected token. A constructor, method, accessor, or property was expected.",
        "A 'declare' modifier cannot be used with an import declaration.": "A 'declare' modifier cannot be used with an import declaration.",
        "Invalid 'reference' directive syntax.": "無效的 'reference' 指示詞語法。",
        "Octal literals are not available when targeting ECMAScript 5 and higher.": "以 ECMAScript 5 (含) 以上版本為目標時，無法使用八進位常值。",
        "An accessor cannot be declared in an ambient context.": "An accessor cannot be declared in an ambient context.",
        "'{0}' modifier cannot appear on a constructor declaration.": "建構函式宣告不能有 '{0}' 修飾詞。",
        "'{0}' modifier cannot appear on a parameter.": "參數不能有 '{0}' 修飾詞。",
        "Only a single variable declaration is allowed in a 'for...in' statement.": "只有 'for...in' 陳述式中才可以使用單一變數宣告。",
        "Type parameters cannot appear on a constructor declaration.": "建構函式宣告不能有類型參數。",
        "Type annotation cannot appear on a constructor declaration.": "建構函式宣告不能有類型註釋。",
        "An accessor cannot have type parameters.": "An accessor cannot have type parameters.",
        "A 'set' accessor cannot have a return type annotation.": "A 'set' accessor cannot have a return type annotation.",
        "An index signature must have exactly one parameter.": "An index signature must have exactly one parameter.",
        "'{0}' list cannot be empty.": "'{0}' list cannot be empty.",
        "Type parameter list cannot be empty.": "Type parameter list cannot be empty.",
        "Type argument list cannot be empty.": "Type argument list cannot be empty.",
        "Invalid use of '{0}' in strict mode.": "Invalid use of '{0}' in strict mode.",
        "'with' statements are not allowed in strict mode.": "'with' statements are not allowed in strict mode.",
        "'delete' cannot be called on an identifier in strict mode.": "'delete' cannot be called on an identifier in strict mode.",
        "A 'continue' statement can only be used within an enclosing iteration statement.": "A 'continue' statement can only be used within an enclosing iteration statement.",
        "A 'break' statement can only be used within an enclosing iteration or switch statement.": "A 'break' statement can only be used within an enclosing iteration or switch statement.",
        "Jump target cannot cross function boundary.": "跳躍目標不能跨越函式界限。",
        "A 'return' statement can only be used within a function body.": "A 'return' statement can only be used within a function body.",
        "Expression expected.": "Expression expected.",
        "Type expected.": "Type expected.",
        "A constructor implementation cannot be declared in an ambient context.": "A constructor implementation cannot be declared in an ambient context.",
        "A class member cannot be declared optional.": "A class member cannot be declared optional.",
        "A 'default' clause cannot appear more than once in a 'switch' statement.": "A 'default' clause cannot appear more than once in a 'switch' statement.",
        "Duplicate label '{0}'": "Duplicate label '{0}'",
        "A 'continue' statement can only jump to a label of an enclosing iteration statement.": "A 'continue' statement can only jump to a label of an enclosing iteration statement.",
        "A 'break' statement can only jump to a label of an enclosing statement.": "A 'break' statement can only jump to a label of an enclosing statement.",
        "An object literal cannot have multiple properties with the same name in strict mode.": "An object literal cannot have multiple properties with the same name in strict mode.",
        "An object literal cannot have multiple get/set accessors with the same name.": "An object literal cannot have multiple get/set accessors with the same name.",
        "An object literal cannot have property and accessor with the same name.": "An object literal cannot have property and accessor with the same name.",
        "An export assignment cannot have modifiers.": "An export assignment cannot have modifiers.",
        "Octal literals are not allowed in strict mode.": "Octal literals are not allowed in strict mode.",
        "A tuple type element list cannot be empty.": "A tuple type element list cannot be empty.",
        "Variable declaration list cannot be empty.": "Variable declaration list cannot be empty.",
        "Digit expected.": "Digit expected.",
        "Hexadecimal digit expected.": "Hexadecimal digit expected.",
        "Unexpected end of text.": "Unexpected end of text.",
        "Invalid character.": "Invalid character.",
        "Declaration or statement expected.": "Declaration or statement expected.",
        "Statement expected.": "Statement expected.",
        "'case' or 'default' expected.": "'case' or 'default' expected.",
        "Property or signature expected.": "Property or signature expected.",
        "Enum member expected.": "Enum member expected.",
        "Type reference expected.": "Type reference expected.",
        "Variable declaration expected.": "Variable declaration expected.",
        "Argument expression expected.": "Argument expression expected.",
        "Property assignment expected.": "Property assignment expected.",
        "Expression or comma expected.": "Expression or comma expected.",
        "Parameter declaration expected.": "Parameter declaration expected.",
        "Type parameter declaration expected.": "Type parameter declaration expected.",
        "Type argument expected.": "Type argument expected.",
        "String literal expected.": "String literal expected.",
        "Line break not permitted here.": "Line break not permitted here.",
        "'{' or ';' expected.": "'{' or ';' expected.",
        "Modifiers not permitted on index signature members.": "Modifiers not permitted on index signature members.",
        "Declaration expected.": "Declaration expected.",
        "Import declarations in an internal module cannot reference an external module.": "內部模組中的匯入宣告無法參考外部模組。",
        "Cannot compile external modules unless the '--module' flag is provided.": "除非提供 '--module' 旗標，否則無法編譯外部模組。",
        "Filename '{0}' differs from already included filename '{1}' only in casing": "Filename '{0}' differs from already included filename '{1}' only in casing",
        "'new T[]' cannot be used to create an array. Use 'new Array<T>()' instead.": "'new T[]' 不能用來建立陣列。請改用 'new Array<T>()'。",
        "'var', 'let' or 'const' expected.": "'var', 'let' or 'const' expected.",
        "'let' declarations are only available when targeting ECMAScript 6 and higher.": "'let' declarations are only available when targeting ECMAScript 6 and higher.",
        "'const' declarations are only available when targeting ECMAScript 6 and higher.": "'const' declarations are only available when targeting ECMAScript 6 and higher.",
        "'const' declarations must be initialized": "'const' declarations must be initialized",
        "'const' declarations can only be declared inside a block.": "'const' declarations can only be declared inside a block.",
        "'let' declarations can only be declared inside a block.": "'let' declarations can only be declared inside a block.",
        "Tagged templates are only available when targeting ECMAScript 6 and higher.": "Tagged templates are only available when targeting ECMAScript 6 and higher.",
        "Unterminated template literal.": "Unterminated template literal.",
        "Unterminated regular expression literal.": "Unterminated regular expression literal.",
        "An object member cannot be declared optional.": "An object member cannot be declared optional.",
        "'yield' expression must be contained_within a generator declaration.": "'yield' expression must be contained_within a generator declaration.",
        "Computed property names are not allowed in enums.": "Computed property names are not allowed in enums.",
        "Computed property names are not allowed in an ambient context.": "Computed property names are not allowed in an ambient context.",
        "Computed property names are not allowed in class property declarations.": "Computed property names are not allowed in class property declarations.",
        "Computed property names are only available when targeting ECMAScript 6 and higher.": "Computed property names are only available when targeting ECMAScript 6 and higher.",
        "Computed property names are not allowed in method overloads.": "Computed property names are not allowed in method overloads.",
        "Computed property names are not allowed in interfaces.": "Computed property names are not allowed in interfaces.",
        "Computed property names are not allowed in type literals.": "Computed property names are not allowed in type literals.",
        "A comma expression is not allowed in a computed property name.": "A comma expression is not allowed in a computed property name.",
        "'extends' clause already seen.": "已經有 'extends' 子句。",
        "'extends' clause must precede 'implements' clause.": "'extends' 子句必須在 'implements' 子句之前。",
        "Classes can only extend a single class.": "類別只能擴充一個類別。",
        "'implements' clause already seen.": "已經看到 'implements' 子句。",
        "Interface declaration cannot have 'implements' clause.": "介面宣告不能有'implements' 子句。",
        "Binary digit expected.": "Binary digit expected.",
        "Octal digit expected.": "Octal digit expected.",
        "Unexpected token. '{' expected.": "Unexpected token. '{' expected.",
        "Duplicate identifier '{0}'.": "識別項 '{0}' 重複。",
        "Initializer of instance member variable '{0}' cannot reference identifier '{1}' declared in the constructor.": "執行個體成員變數 '{0}' 的初始設定式不能參考建構函式中宣告的識別項 '{1}'。",
        "Static members cannot reference class type parameters.": "靜態成員不能參考類別類型參數。",
        "Circular definition of import alias '{0}'.": "Circular definition of import alias '{0}'.",
        "Cannot find name '{0}'.": "Cannot find name '{0}'.",
        "Module '{0}' has no exported member '{1}'.": "Module '{0}' has no exported member '{1}'.",
        "File '{0}' is not an external module.": "File '{0}' is not an external module.",
        "Cannot find external module '{0}'.": "Cannot find external module '{0}'.",
        "A module cannot have more than one export assignment.": "A module cannot have more than one export assignment.",
        "An export assignment cannot be used in a module with other exported elements.": "An export assignment cannot be used in a module with other exported elements.",
        "Type '{0}' recursively references itself as a base type.": "Type '{0}' recursively references itself as a base type.",
        "A class may only extend another class.": "類別只能擴充其他類別。",
        "An interface may only extend a class or another interface.": "An interface may only extend a class or another interface.",
        "Constraint of a type parameter cannot reference any type parameter from the same type parameter list.": "類型參數的條件約束不能參考相同類型參數清單中的任何類型參數。",
        "Generic type '{0}' requires {1} type argument(s).": "泛型類型 '{0}' 需要 {1} 個類型引數。",
        "Type '{0}' is not generic.": "Type '{0}' is not generic.",
        "Global type '{0}' must be a class or interface type.": "Global type '{0}' must be a class or interface type.",
        "Global type '{0}' must have {1} type parameter(s).": "Global type '{0}' must have {1} type parameter(s).",
        "Cannot find global type '{0}'.": "Cannot find global type '{0}'.",
        "Named properties '{0}' of types '{1}' and '{2}' are not identical.": "類型 '{1}' 與 '{2}' 的具名屬性 '{0}' 不相同。",
        "Interface '{0}' cannot simultaneously extend types '{1}' and '{2}'.": "Interface '{0}' cannot simultaneously extend types '{1}' and '{2}'.",
        "Excessive stack depth comparing types '{0}' and '{1}'.": "Excessive stack depth comparing types '{0}' and '{1}'.",
        "Type '{0}' is not assignable to type '{1}'.": "Type '{0}' is not assignable to type '{1}'.",
        "Property '{0}' is missing in type '{1}'.": "Property '{0}' is missing in type '{1}'.",
        "Property '{0}' is private in type '{1}' but not in type '{2}'.": "Property '{0}' is private in type '{1}' but not in type '{2}'.",
        "Types of property '{0}' are incompatible.": "Types of property '{0}' are incompatible.",
        "Property '{0}' is optional in type '{1}' but required in type '{2}'.": "Property '{0}' is optional in type '{1}' but required in type '{2}'.",
        "Types of parameters '{0}' and '{1}' are incompatible.": "Types of parameters '{0}' and '{1}' are incompatible.",
        "Index signature is missing in type '{0}'.": "Index signature is missing in type '{0}'.",
        "Index signatures are incompatible.": "Index signatures are incompatible.",
        "'this' cannot be referenced in a module body.": "'this' cannot be referenced in a module body.",
        "'this' cannot be referenced in current location.": "您無法在目前的位置中參考 'this'。",
        "'this' cannot be referenced in constructor arguments.": "您無法在建構函式引數中參考 'this'。",
        "'this' cannot be referenced in a static property initializer.": "'this' cannot be referenced in a static property initializer.",
        "'super' can only be referenced in a derived class.": "'super' can only be referenced in a derived class.",
        "'super' cannot be referenced in constructor arguments.": "您無法在建構函式引數中參考 'super'。",
        "Super calls are not permitted outside constructors or in nested functions inside constructors": "Super calls are not permitted outside constructors or in nested functions inside constructors",
        "'super' property access is permitted only in a constructor, member function, or member accessor of a derived class": "'super' property access is permitted only in a constructor, member function, or member accessor of a derived class",
        "Property '{0}' does not exist on type '{1}'.": "Property '{0}' does not exist on type '{1}'.",
        "Only public and protected methods of the base class are accessible via the 'super' keyword": "Only public and protected methods of the base class are accessible via the 'super' keyword",
        "Property '{0}' is private and only accessible within class '{1}'.": "Property '{0}' is private and only accessible within class '{1}'.",
        "An index expression argument must be of type 'string', 'number', or 'any'.": "An index expression argument must be of type 'string', 'number', or 'any'.",
        "Type '{0}' does not satisfy the constraint '{1}'.": "Type '{0}' does not satisfy the constraint '{1}'.",
        "Argument of type '{0}' is not assignable to parameter of type '{1}'.": "Argument of type '{0}' is not assignable to parameter of type '{1}'.",
        "Supplied parameters do not match any signature of call target.": "提供的參數與任何呼叫目標簽章都不符。",
        "Untyped function calls may not accept type arguments.": "不具類型的函式呼叫無法接受類型引數。",
        "Value of type '{0}' is not callable. Did you mean to include 'new'?": "無法呼叫類型為 '{0}' 的值。您是不是要包含 'new'?",
        "Cannot invoke an expression whose type lacks a call signature.": "無法叫用缺少呼叫簽章之類型的運算式。",
        "Only a void function can be called with the 'new' keyword.": "Only a void function can be called with the 'new' keyword.",
        "Cannot use 'new' with an expression whose type lacks a call or construct signature.": "Cannot use 'new' with an expression whose type lacks a call or construct signature.",
        "Neither type '{0}' nor type '{1}' is assignable to the other.": "Neither type '{0}' nor type '{1}' is assignable to the other.",
        "No best common type exists among return expressions.": "No best common type exists among return expressions.",
        "A function whose declared type is neither 'void' nor 'any' must return a value or consist of a single 'throw' statement.": "A function whose declared type is neither 'void' nor 'any' must return a value or consist of a single 'throw' statement.",
        "An arithmetic operand must be of type 'any', 'number' or an enum type.": "An arithmetic operand must be of type 'any', 'number' or an enum type.",
        "The operand of an increment or decrement operator must be a variable, property or indexer.": "遞增或遞減運算子的運算元必須是變數、屬性或索引子。",
        "The left-hand side of an 'instanceof' expression must be of type 'any', an object type or a type parameter.": "'instanceof' 運算式左邊的類型必須是 'any'、物件類型或類型參數。",
        "The right-hand side of an 'instanceof' expression must be of type 'any' or of a type assignable to the 'Function' interface type.": "'instanceof' 運算式右邊的類型必須是 'any'，或是可指派給 'Function' 介面類型的類型。",
        "The left-hand side of an 'in' expression must be of types 'any', 'string' or 'number'.": "'in' 運算式左邊的類型必須是 'any'、'string' 或 'number'。",
        "The right-hand side of an 'in' expression must be of type 'any', an object type or a type parameter": "The right-hand side of an 'in' expression must be of type 'any', an object type or a type parameter",
        "The left-hand side of an arithmetic operation must be of type 'any', 'number' or an enum type.": "算術運算左邊的類型必須是 'any'、'number' 或列舉類型。",
        "The right-hand side of an arithmetic operation must be of type 'any', 'number' or an enum type.": "算術運算右邊的類型必須是 'any'、'number' 或列舉類型。",
        "Invalid left-hand side of assignment expression.": "指派運算式的左邊無效。",
        "Operator '{0}' cannot be applied to types '{1}' and '{2}'.": "運算子 '{0}' 無法套用至類型 '{1}' 和 '{2}'。",
        "Type parameter name cannot be '{0}'": "Type parameter name cannot be '{0}'",
        "A parameter property is only allowed in a constructor implementation.": "A parameter property is only allowed in a constructor implementation.",
        "A rest parameter must be of an array type.": "A rest parameter must be of an array type.",
        "A parameter initializer is only allowed in a function or constructor implementation.": "A parameter initializer is only allowed in a function or constructor implementation.",
        "Parameter '{0}' cannot be referenced in its initializer.": "無法在參數 '{0}' 的初始設定式中參考此參數。",
        "Initializer of parameter '{0}' cannot reference identifier '{1}' declared after it.": "參數 '{0}' 的初始設定式不能參考在它之後宣告的識別項 '{1}'。",
        "Duplicate string index signature.": "字串索引簽章重複。",
        "Duplicate number index signature.": "數字索引簽章重複。",
        "A 'super' call must be the first statement in the constructor when a class contains initialized properties or has parameter properties.": "如果類別包含已初始化的屬性或參數屬性，'super' 呼叫就必須是建構函式中的第一個陳述式。",
        "Constructors for derived classes must contain a 'super' call.": "衍生類別的建構函式必須包含 'super' 呼叫。",
        "A 'get' accessor must return a value or consist of a single 'throw' statement.": "A 'get' accessor must return a value or consist of a single 'throw' statement.",
        "Getter and setter accessors do not agree in visibility.": "getter 和 setter 存取子的可視性不符。",
        "'get' and 'set' accessor must have the same type.": "'get' 和 'set' 存取子的類型必須相同。",
        "A signature with an implementation cannot use a string literal type.": "A signature with an implementation cannot use a string literal type.",
        "Specialized overload signature is not assignable to any non-specialized signature.": "特製化的多載簽章不可指派給任何非特製化簽章。",
        "Overload signatures must all be exported or not exported.": "多載簽章必須全部匯出或全部不匯出。",
        "Overload signatures must all be ambient or non-ambient.": "多載簽章都必須是環境或非環境簽章。",
        "Overload signatures must all be public, private or protected.": "Overload signatures must all be public, private or protected.",
        "Overload signatures must all be optional or required.": "多載簽章都必須是選擇性或必要簽章。",
        "Function overload must be static.": "函式多載必須是靜態的。",
        "Function overload must not be static.": "函式多載不可以是靜態的。",
        "Function implementation name must be '{0}'.": "Function implementation name must be '{0}'.",
        "Constructor implementation is missing.": "Constructor implementation is missing.",
        "Function implementation is missing or not immediately following the declaration.": "Function implementation is missing or not immediately following the declaration.",
        "Multiple constructor implementations are not allowed.": "不允許多個建構函式實作。",
        "Duplicate function implementation.": "Duplicate function implementation.",
        "Overload signature is not compatible with function implementation.": "Overload signature is not compatible with function implementation.",
        "Individual declarations in merged declaration {0} must be all exported or all local.": "Individual declarations in merged declaration {0} must be all exported or all local.",
        "Duplicate identifier 'arguments'. Compiler uses 'arguments' to initialize rest parameters.": "識別項 'arguments'' 重複。編譯器使用 'arguments' 來初始化剩餘參數。",
        "Duplicate identifier '_i'. Compiler uses '_i' to initialize rest parameter.": "識別項 '_i' 重複。編譯器使用 '_i' 來初始化剩餘參數。",
        "Expression resolves to variable declaration '_i' that compiler uses to initialize rest parameter.": "運算式解析成編譯器用來初始化剩餘參數的變數宣告 '_i'。",
        "Duplicate identifier '_this'. Compiler uses variable declaration '_this' to capture 'this' reference.": "識別項 '_this' 重複。編譯器使用變數宣告 '_this' 來擷取 'this' 參考。",
        "Expression resolves to variable declaration '_this' that compiler uses to capture 'this' reference.": "運算式解析成編譯器用來擷取 'this' 參考的變數宣告 '_this'。",
        "Duplicate identifier '_super'. Compiler uses '_super' to capture base class reference.": "識別項 '_super' 重複。編譯器使用 '_super' 來擷取基底類別參考。",
        "Expression resolves to '_super' that compiler uses to capture base class reference.": "運算式解析成編譯器用來擷取基底類別參考的 '_super'。",
        "Subsequent variable declarations must have the same type.  Variable '{0}' must be of type '{1}', but here has type '{2}'.": "後續的變數宣告必須具有相同的類型。變數 '{0}' 的類型必須是 '{1}' 但卻是 '{2}'。",
        "The left-hand side of a 'for...in' statement cannot use a type annotation.": "The left-hand side of a 'for...in' statement cannot use a type annotation.",
        "The left-hand side of a 'for...in' statement must be of type 'string' or 'any'.": "The left-hand side of a 'for...in' statement must be of type 'string' or 'any'.",
        "Invalid left-hand side in 'for...in' statement.": "Invalid left-hand side in 'for...in' statement.",
        "The right-hand side of a 'for...in' statement must be of type 'any', an object type or a type parameter.": "'for...in' 陳述式右邊的類型必須是 'any'、物件類型或類型參數。",
        "Setters cannot return a value.": "setter 都不能傳回值。",
        "Return type of constructor signature must be assignable to the instance type of the class": "Return type of constructor signature must be assignable to the instance type of the class",
        "All symbols within a 'with' block will be resolved to 'any'.": "All symbols within a 'with' block will be resolved to 'any'.",
        "Property '{0}' of type '{1}' is not assignable to string index type '{2}'.": "Property '{0}' of type '{1}' is not assignable to string index type '{2}'.",
        "Property '{0}' of type '{1}' is not assignable to numeric index type '{2}'.": "Property '{0}' of type '{1}' is not assignable to numeric index type '{2}'.",
        "Numeric index type '{0}' is not assignable to string index type '{1}'.": "Numeric index type '{0}' is not assignable to string index type '{1}'.",
        "Class name cannot be '{0}'": "Class name cannot be '{0}'",
        "Class '{0}' incorrectly extends base class '{1}'.": "Class '{0}' incorrectly extends base class '{1}'.",
        "Class static side '{0}' incorrectly extends base class static side '{1}'.": "Class static side '{0}' incorrectly extends base class static side '{1}'.",
        "Type name '{0}' in extends clause does not reference constructor function for '{0}'.": "Type name '{0}' in extends clause does not reference constructor function for '{0}'.",
        "Class '{0}' incorrectly implements interface '{1}'.": "Class '{0}' incorrectly implements interface '{1}'.",
        "A class may only implement another class or interface.": "類別只能實作其他類別或介面。",
        "Class '{0}' defines instance member function '{1}', but extended class '{2}' defines it as instance member accessor.": "類別 '{0}' 已定義執行個體成員函式 '{1}'，但是擴充類別 '{2}' 卻將其定義為執行個體成員存取子。",
        "Class '{0}' defines instance member function '{1}', but extended class '{2}' defines it as instance member property.": "類別 '{0}' 已定義執行個體成員函式 '{1}'，但是擴充類別 '{2}' 卻將其定義為執行個體成員屬性。",
        "Class '{0}' defines instance member property '{1}', but extended class '{2}' defines it as instance member function.": "類別 '{0}' 已定義執行個體成員屬性 '{1}'，但是擴充類別 '{2}' 卻將其定義為執行個體成員函式。",
        "Class '{0}' defines instance member accessor '{1}', but extended class '{2}' defines it as instance member function.": "類別 '{0}' 已定義執行個體成員存取子 '{1}'，但是擴充類別 '{2}' 卻將其定義為執行個體成員函式。",
        "Interface name cannot be '{0}'": "Interface name cannot be '{0}'",
        "All declarations of an interface must have identical type parameters.": "介面的所有宣告必須具有相同的類型參數。",
        "Interface '{0}' incorrectly extends interface '{1}'.": "Interface '{0}' incorrectly extends interface '{1}'.",
        "Enum name cannot be '{0}'": "Enum name cannot be '{0}'",
        "In an enum with multiple declarations, only one declaration can omit an initializer for its first enum element.": "In an enum with multiple declarations, only one declaration can omit an initializer for its first enum element.",
        "A module declaration cannot be in a different file from a class or function with which it is merged": "A module declaration cannot be in a different file from a class or function with which it is merged",
        "A module declaration cannot be located prior to a class or function with which it is merged": "A module declaration cannot be located prior to a class or function with which it is merged",
        "Ambient external modules cannot be nested in other modules.": "Ambient external modules cannot be nested in other modules.",
        "Ambient external module declaration cannot specify relative module name.": "環境外部模組宣告不能指定相對模組名稱。",
        "Module '{0}' is hidden by a local declaration with the same name": "Module '{0}' is hidden by a local declaration with the same name",
        "Import name cannot be '{0}'": "Import name cannot be '{0}'",
        "Import declaration in an ambient external module declaration cannot reference external module through relative external module name.": "環境外部模組宣告中的匯入宣告不能透過相對外部模組名稱參考外部模組。",
        "Import declaration conflicts with local declaration of '{0}'": "Import declaration conflicts with local declaration of '{0}'",
        "Duplicate identifier '{0}'. Compiler reserves name '{1}' in top level scope of an external module.": "識別項 '{0}' 重複。編譯器將名稱 '{1}' 保留在外部模組的最上層範圍。",
        "Types have separate declarations of a private property '{0}'.": "Types have separate declarations of a private property '{0}'.",
        "Property '{0}' is protected but type '{1}' is not a class derived from '{2}'.": "Property '{0}' is protected but type '{1}' is not a class derived from '{2}'.",
        "Property '{0}' is protected in type '{1}' but public in type '{2}'.": "Property '{0}' is protected in type '{1}' but public in type '{2}'.",
        "Property '{0}' is protected and only accessible within class '{1}' and its subclasses.": "Property '{0}' is protected and only accessible within class '{1}' and its subclasses.",
        "Property '{0}' is protected and only accessible through an instance of class '{1}'.": "Property '{0}' is protected and only accessible through an instance of class '{1}'.",
        "The '{0}' operator is not allowed for boolean types. Consider using '{1}' instead.": "The '{0}' operator is not allowed for boolean types. Consider using '{1}' instead.",
        "Block-scoped variable '{0}' used before its declaration.": "Block-scoped variable '{0}' used before its declaration.",
        "The operand of an increment or decrement operator cannot be a constant.": "The operand of an increment or decrement operator cannot be a constant.",
        "Left-hand side of assignment expression cannot be a constant.": "Left-hand side of assignment expression cannot be a constant.",
        "Cannot redeclare block-scoped variable '{0}'.": "Cannot redeclare block-scoped variable '{0}'.",
        "An enum member cannot have a numeric name.": "An enum member cannot have a numeric name.",
        "The type argument for type parameter '{0}' cannot be inferred from the usage. Consider specifying the type arguments explicitly.": "The type argument for type parameter '{0}' cannot be inferred from the usage. Consider specifying the type arguments explicitly.",
        "Type argument candidate '{1}' is not a valid type argument because it is not a supertype of candidate '{0}'.": "Type argument candidate '{1}' is not a valid type argument because it is not a supertype of candidate '{0}'.",
        "Type alias '{0}' circularly references itself.": "Type alias '{0}' circularly references itself.",
        "Type alias name cannot be '{0}'": "Type alias name cannot be '{0}'",
        "An AMD module cannot have multiple name assignments.": "An AMD module cannot have multiple name assignments.",
        "Import declaration '{0}' is using private name '{1}'.": "Import declaration '{0}' is using private name '{1}'.",
        "Type parameter '{0}' of exported class has or is using private name '{1}'.": "Type parameter '{0}' of exported class has or is using private name '{1}'.",
        "Type parameter '{0}' of exported interface has or is using private name '{1}'.": "Type parameter '{0}' of exported interface has or is using private name '{1}'.",
        "Type parameter '{0}' of constructor signature from exported interface has or is using private name '{1}'.": "Type parameter '{0}' of constructor signature from exported interface has or is using private name '{1}'.",
        "Type parameter '{0}' of call signature from exported interface has or is using private name '{1}'.": "Type parameter '{0}' of call signature from exported interface has or is using private name '{1}'.",
        "Type parameter '{0}' of public static method from exported class has or is using private name '{1}'.": "Type parameter '{0}' of public static method from exported class has or is using private name '{1}'.",
        "Type parameter '{0}' of public method from exported class has or is using private name '{1}'.": "Type parameter '{0}' of public method from exported class has or is using private name '{1}'.",
        "Type parameter '{0}' of method from exported interface has or is using private name '{1}'.": "Type parameter '{0}' of method from exported interface has or is using private name '{1}'.",
        "Type parameter '{0}' of exported function has or is using private name '{1}'.": "Type parameter '{0}' of exported function has or is using private name '{1}'.",
        "Implements clause of exported class '{0}' has or is using private name '{1}'.": "Implements clause of exported class '{0}' has or is using private name '{1}'.",
        "Extends clause of exported class '{0}' has or is using private name '{1}'.": "Extends clause of exported class '{0}' has or is using private name '{1}'.",
        "Extends clause of exported interface '{0}' has or is using private name '{1}'.": "Extends clause of exported interface '{0}' has or is using private name '{1}'.",
        "Exported variable '{0}' has or is using name '{1}' from external module {2} but cannot be named.": "Exported variable '{0}' has or is using name '{1}' from external module {2} but cannot be named.",
        "Exported variable '{0}' has or is using name '{1}' from private module '{2}'.": "Exported variable '{0}' has or is using name '{1}' from private module '{2}'.",
        "Exported variable '{0}' has or is using private name '{1}'.": "Exported variable '{0}' has or is using private name '{1}'.",
        "Public static property '{0}' of exported class has or is using name '{1}' from external module {2} but cannot be named.": "Public static property '{0}' of exported class has or is using name '{1}' from external module {2} but cannot be named.",
        "Public static property '{0}' of exported class has or is using name '{1}' from private module '{2}'.": "Public static property '{0}' of exported class has or is using name '{1}' from private module '{2}'.",
        "Public static property '{0}' of exported class has or is using private name '{1}'.": "Public static property '{0}' of exported class has or is using private name '{1}'.",
        "Public property '{0}' of exported class has or is using name '{1}' from external module {2} but cannot be named.": "Public property '{0}' of exported class has or is using name '{1}' from external module {2} but cannot be named.",
        "Public property '{0}' of exported class has or is using name '{1}' from private module '{2}'.": "Public property '{0}' of exported class has or is using name '{1}' from private module '{2}'.",
        "Public property '{0}' of exported class has or is using private name '{1}'.": "Public property '{0}' of exported class has or is using private name '{1}'.",
        "Property '{0}' of exported interface has or is using name '{1}' from private module '{2}'.": "Property '{0}' of exported interface has or is using name '{1}' from private module '{2}'.",
        "Property '{0}' of exported interface has or is using private name '{1}'.": "Property '{0}' of exported interface has or is using private name '{1}'.",
        "Parameter '{0}' of public static property setter from exported class has or is using name '{1}' from private module '{2}'.": "Parameter '{0}' of public static property setter from exported class has or is using name '{1}' from private module '{2}'.",
        "Parameter '{0}' of public static property setter from exported class has or is using private name '{1}'.": "Parameter '{0}' of public static property setter from exported class has or is using private name '{1}'.",
        "Parameter '{0}' of public property setter from exported class has or is using name '{1}' from private module '{2}'.": "Parameter '{0}' of public property setter from exported class has or is using name '{1}' from private module '{2}'.",
        "Parameter '{0}' of public property setter from exported class has or is using private name '{1}'.": "Parameter '{0}' of public property setter from exported class has or is using private name '{1}'.",
        "Return type of public static property getter from exported class has or is using name '{0}' from external module {1} but cannot be named.": "Return type of public static property getter from exported class has or is using name '{0}' from external module {1} but cannot be named.",
        "Return type of public static property getter from exported class has or is using name '{0}' from private module '{1}'.": "Return type of public static property getter from exported class has or is using name '{0}' from private module '{1}'.",
        "Return type of public static property getter from exported class has or is using private name '{0}'.": "Return type of public static property getter from exported class has or is using private name '{0}'.",
        "Return type of public property getter from exported class has or is using name '{0}' from external module {1} but cannot be named.": "Return type of public property getter from exported class has or is using name '{0}' from external module {1} but cannot be named.",
        "Return type of public property getter from exported class has or is using name '{0}' from private module '{1}'.": "Return type of public property getter from exported class has or is using name '{0}' from private module '{1}'.",
        "Return type of public property getter from exported class has or is using private name '{0}'.": "Return type of public property getter from exported class has or is using private name '{0}'.",
        "Return type of constructor signature from exported interface has or is using name '{0}' from private module '{1}'.": "Return type of constructor signature from exported interface has or is using name '{0}' from private module '{1}'.",
        "Return type of constructor signature from exported interface has or is using private name '{0}'.": "Return type of constructor signature from exported interface has or is using private name '{0}'.",
        "Return type of call signature from exported interface has or is using name '{0}' from private module '{1}'.": "Return type of call signature from exported interface has or is using name '{0}' from private module '{1}'.",
        "Return type of call signature from exported interface has or is using private name '{0}'.": "Return type of call signature from exported interface has or is using private name '{0}'.",
        "Return type of index signature from exported interface has or is using name '{0}' from private module '{1}'.": "Return type of index signature from exported interface has or is using name '{0}' from private module '{1}'.",
        "Return type of index signature from exported interface has or is using private name '{0}'.": "Return type of index signature from exported interface has or is using private name '{0}'.",
        "Return type of public static method from exported class has or is using name '{0}' from external module {1} but cannot be named.": "Return type of public static method from exported class has or is using name '{0}' from external module {1} but cannot be named.",
        "Return type of public static method from exported class has or is using name '{0}' from private module '{1}'.": "Return type of public static method from exported class has or is using name '{0}' from private module '{1}'.",
        "Return type of public static method from exported class has or is using private name '{0}'.": "Return type of public static method from exported class has or is using private name '{0}'.",
        "Return type of public method from exported class has or is using name '{0}' from external module {1} but cannot be named.": "Return type of public method from exported class has or is using name '{0}' from external module {1} but cannot be named.",
        "Return type of public method from exported class has or is using name '{0}' from private module '{1}'.": "Return type of public method from exported class has or is using name '{0}' from private module '{1}'.",
        "Return type of public method from exported class has or is using private name '{0}'.": "Return type of public method from exported class has or is using private name '{0}'.",
        "Return type of method from exported interface has or is using name '{0}' from private module '{1}'.": "Return type of method from exported interface has or is using name '{0}' from private module '{1}'.",
        "Return type of method from exported interface has or is using private name '{0}'.": "Return type of method from exported interface has or is using private name '{0}'.",
        "Return type of exported function has or is using name '{0}' from external module {1} but cannot be named.": "Return type of exported function has or is using name '{0}' from external module {1} but cannot be named.",
        "Return type of exported function has or is using name '{0}' from private module '{1}'.": "Return type of exported function has or is using name '{0}' from private module '{1}'.",
        "Return type of exported function has or is using private name '{0}'.": "Return type of exported function has or is using private name '{0}'.",
        "Parameter '{0}' of constructor from exported class has or is using name '{1}' from external module {2} but cannot be named.": "Parameter '{0}' of constructor from exported class has or is using name '{1}' from external module {2} but cannot be named.",
        "Parameter '{0}' of constructor from exported class has or is using name '{1}' from private module '{2}'.": "Parameter '{0}' of constructor from exported class has or is using name '{1}' from private module '{2}'.",
        "Parameter '{0}' of constructor from exported class has or is using private name '{1}'.": "Parameter '{0}' of constructor from exported class has or is using private name '{1}'.",
        "Parameter '{0}' of constructor signature from exported interface has or is using name '{1}' from private module '{2}'.": "Parameter '{0}' of constructor signature from exported interface has or is using name '{1}' from private module '{2}'.",
        "Parameter '{0}' of constructor signature from exported interface has or is using private name '{1}'.": "Parameter '{0}' of constructor signature from exported interface has or is using private name '{1}'.",
        "Parameter '{0}' of call signature from exported interface has or is using name '{1}' from private module '{2}'.": "Parameter '{0}' of call signature from exported interface has or is using name '{1}' from private module '{2}'.",
        "Parameter '{0}' of call signature from exported interface has or is using private name '{1}'.": "Parameter '{0}' of call signature from exported interface has or is using private name '{1}'.",
        "Parameter '{0}' of public static method from exported class has or is using name '{1}' from external module {2} but cannot be named.": "Parameter '{0}' of public static method from exported class has or is using name '{1}' from external module {2} but cannot be named.",
        "Parameter '{0}' of public static method from exported class has or is using name '{1}' from private module '{2}'.": "Parameter '{0}' of public static method from exported class has or is using name '{1}' from private module '{2}'.",
        "Parameter '{0}' of public static method from exported class has or is using private name '{1}'.": "Parameter '{0}' of public static method from exported class has or is using private name '{1}'.",
        "Parameter '{0}' of public method from exported class has or is using name '{1}' from external module {2} but cannot be named.": "Parameter '{0}' of public method from exported class has or is using name '{1}' from external module {2} but cannot be named.",
        "Parameter '{0}' of public method from exported class has or is using name '{1}' from private module '{2}'.": "Parameter '{0}' of public method from exported class has or is using name '{1}' from private module '{2}'.",
        "Parameter '{0}' of public method from exported class has or is using private name '{1}'.": "Parameter '{0}' of public method from exported class has or is using private name '{1}'.",
        "Parameter '{0}' of method from exported interface has or is using name '{1}' from private module '{2}'.": "Parameter '{0}' of method from exported interface has or is using name '{1}' from private module '{2}'.",
        "Parameter '{0}' of method from exported interface has or is using private name '{1}'.": "Parameter '{0}' of method from exported interface has or is using private name '{1}'.",
        "Parameter '{0}' of exported function has or is using name '{1}' from external module {2} but cannot be named.": "Parameter '{0}' of exported function has or is using name '{1}' from external module {2} but cannot be named.",
        "Parameter '{0}' of exported function has or is using name '{1}' from private module '{2}'.": "Parameter '{0}' of exported function has or is using name '{1}' from private module '{2}'.",
        "Parameter '{0}' of exported function has or is using private name '{1}'.": "Parameter '{0}' of exported function has or is using private name '{1}'.",
        "Exported type alias '{0}' has or is using private name '{1}'.": "Exported type alias '{0}' has or is using private name '{1}'.",
        "Enum declarations must all be const or non-const.": "Enum declarations must all be const or non-const.",
        "In 'const' enum declarations member initializer must be constant expression.": "In 'const' enum declarations member initializer must be constant expression.",
        "'const' enums can only be used in property or index access expressions or the right hand side of an import declaration or export assignment.": "'const' enums can only be used in property or index access expressions or the right hand side of an import declaration or export assignment.",
        "Index expression arguments in 'const' enums must be of type 'string'.": "Index expression arguments in 'const' enums must be of type 'string'.",
        "'const' enum member initializer was evaluated to a non-finite value.": "'const' enum member initializer was evaluated to a non-finite value.",
        "'const' enum member initializer was evaluated to disallowed value 'NaN'.": "'const' enum member initializer was evaluated to disallowed value 'NaN'.",
        "The current host does not support the '{0}' option.": "The current host does not support the '{0}' option.",
        "Cannot find the common subdirectory path for the input files.": "找不到輸入檔案的一般子目錄路徑。",
        "Cannot read file '{0}': {1}": "無法讀取檔案 '{0}': {1}",
        "Unsupported file encoding.": "不支援的檔案編碼。",
        "Unknown compiler option '{0}'.": "Unknown compiler option '{0}'.",
        "Could not write file '{0}': {1}": "Could not write file '{0}': {1}",
        "Option mapRoot cannot be specified without specifying sourcemap option.": "必須指定 sourcemap 選項才能指定 mapRoot 選項。",
        "Option sourceRoot cannot be specified without specifying sourcemap option.": "必須指定 sourcemap 選項才能指定 sourceRoot 選項。",
        "Concatenate and emit output to single file.": "串連並發出輸出至單一檔案。",
        "Generates corresponding '.d.ts' file.": "Generates corresponding '.d.ts' file.",
        "Specifies the location where debugger should locate map files instead of generated locations.": "指定偵錯工具尋找對應檔的位置，而不尋找產生的位置。",
        "Specifies the location where debugger should locate TypeScript files instead of source locations.": "指定偵錯工具尋找 TypeScript 檔案的位置，而不尋找原始檔位置。",
        "Watch input files.": "監看輸入檔案。",
        "Redirect output structure to the directory.": "將輸出結構重新導向至目錄。",
        "Do not erase const enum declarations in generated code.": "Do not erase const enum declarations in generated code.",
        "Do not emit outputs if any type checking errors were reported.": "Do not emit outputs if any type checking errors were reported.",
        "Do not emit comments to output.": "不將註解發出到輸出。",
        "Specify ECMAScript target version: 'ES3' (default), 'ES5', or 'ES6' (experimental)": "Specify ECMAScript target version: 'ES3' (default), 'ES5', or 'ES6' (experimental)",
        "Specify module code generation: 'commonjs' or 'amd'": "Specify module code generation: 'commonjs' or 'amd'",
        "Print this message.": "列印這個訊息。",
        "Print the compiler's version.": "Print the compiler's version.",
        "Syntax: {0}": "Syntax: {0}",
        "options": "選項",
        "file1": "檔案",
        "Examples: {0}": "Examples: {0}",
        "Options:": "選項:",
        "Version {0}": "版本 {0}",
        "Insert command line options and files from a file.": "從檔案插入命令列選項和檔案。",
        "File change detected. Compiling...": "File change detected. Compiling...",
        "KIND": "KIND",
        "file2": "檔案",
        "VERSION": "VERSION",
        "LOCATION": "位置",
        "DIRECTORY": "目錄",
        "Compilation complete. Watching for file changes.": "Compilation complete. Watching for file changes.",
        "Generates corresponding '.map' file.": "Generates corresponding '.map' file.",
        "Compiler option '{0}' expects an argument.": "Compiler option '{0}' expects an argument.",
        "Unterminated quoted string in response file '{0}'.": "Unterminated quoted string in response file '{0}'.",
        "Argument for '--module' option must be 'commonjs' or 'amd'.": "Argument for '--module' option must be 'commonjs' or 'amd'.",
        "Argument for '--target' option must be 'es3', 'es5', or 'es6'.": "Argument for '--target' option must be 'es3', 'es5', or 'es6'.",
        "Locale must be of the form <language> or <language>-<territory>. For example '{0}' or '{1}'.": "地區設定的形式必須是 <language> 或 <language>-<territory>。例如 '{0}' 或 '{1}'。",
        "Unsupported locale '{0}'.": "Unsupported locale '{0}'.",
        "Unable to open file '{0}'.": "Unable to open file '{0}'.",
        "Corrupted locale file {0}.": "Corrupted locale file {0}.",
        "Warn on expressions and declarations with an implied 'any' type.": "針對具隱含之 'any' 類型的運算式和宣告產生警告。",
        "File '{0}' not found.": "File '{0}' not found.",
        "File '{0}' must have extension '.ts' or '.d.ts'.": "File '{0}' must have extension '.ts' or '.d.ts'.",
        "Suppress noImplicitAny errors for indexing objects lacking index signatures.": "Suppress noImplicitAny errors for indexing objects lacking index signatures.",
        "Variable '{0}' implicitly has an '{1}' type.": "Variable '{0}' implicitly has an '{1}' type.",
        "Parameter '{0}' implicitly has an '{1}' type.": "Parameter '{0}' implicitly has an '{1}' type.",
        "Member '{0}' implicitly has an '{1}' type.": "Member '{0}' implicitly has an '{1}' type.",
        "'new' expression, whose target lacks a construct signature, implicitly has an 'any' type.": "'new' expression, whose target lacks a construct signature, implicitly has an 'any' type.",
        "'{0}', which lacks return-type annotation, implicitly has an '{1}' return type.": "'{0}', which lacks return-type annotation, implicitly has an '{1}' return type.",
        "Function expression, which lacks return-type annotation, implicitly has an '{0}' return type.": "Function expression, which lacks return-type annotation, implicitly has an '{0}' return type.",
        "Construct signature, which lacks return-type annotation, implicitly has an 'any' return type.": "Construct signature, which lacks return-type annotation, implicitly has an 'any' return type.",
        "Property '{0}' implicitly has type 'any', because its 'set' accessor lacks a type annotation.": "Property '{0}' implicitly has type 'any', because its 'set' accessor lacks a type annotation.",
        "Index signature of object type implicitly has an 'any' type.": "物件類型的索引簽章隱含具有 'any' 類型。",
        "Object literal's property '{0}' implicitly has an '{1}' type.": "Object literal's property '{0}' implicitly has an '{1}' type.",
        "Rest parameter '{0}' implicitly has an 'any[]' type.": "Rest parameter '{0}' implicitly has an 'any[]' type.",
        "Call signature, which lacks return-type annotation, implicitly has an 'any' return type.": "Call signature, which lacks return-type annotation, implicitly has an 'any' return type.",
        "'{0}' implicitly has type 'any' because it is referenced directly or indirectly in its own type annotation.": "'{0}' implicitly has type 'any' because it is referenced directly or indirectly in its own type annotation.",
        "'{0}' implicitly has type 'any' because it is does not have a type annotation and is referenced directly or indirectly in its own initializer.": "'{0}' implicitly has type 'any' because it is does not have a type annotation and is referenced directly or indirectly in its own initializer.",
        "'{0}' implicitly has return type 'any' because it does not have a return type annotation and is referenced directly or indirectly in one of its return expressions.": "'{0}' implicitly has return type 'any' because it does not have a return type annotation and is referenced directly or indirectly in one of its return expressions.",
        "Function implicitly has return type 'any' because it does not have a return type annotation and is referenced directly or indirectly in one of its return expressions.": "Function implicitly has return type 'any' because it does not have a return type annotation and is referenced directly or indirectly in one of its return expressions.",
        "You cannot rename this element.": "You cannot rename this element.",
        "'yield' expressions are not currently supported.": "'yield' expressions are not currently supported.",
        "Generators are not currently supported.": "Generators are not currently supported.",
        "Computed property names are not currently supported.": "Computed property names are not currently supported."
}