{
        "Unterminated string literal.": "Unterminated string literal.",
        "Identifier expected.": "Identificateur attendu.",
        "'{0}' expected.": "'{0}' attendu.",
        "A file cannot have a reference to itself.": "Un fichier ne peut pas contenir une référence à lui-même.",
        "Trailing comma not allowed.": "Trailing comma not allowed.",
        "'*/' expected.": "'*/' attendu.",
        "Unexpected token.": "Jeton inattendu.",
        "Catch clause parameter cannot have a type annotation.": "Une paramètre de clause catch ne peut pas avoir une annotation de type.",
        "A rest parameter must be last in a parameter list.": "A rest parameter must be last in a parameter list.",
        "Parameter cannot have question mark and initializer.": "Un paramètre ne peut pas contenir de point d'interrogation et d'initialiseur.",
        "A required parameter cannot follow an optional parameter.": "A required parameter cannot follow an optional parameter.",
        "An index signature cannot have a rest parameter.": "An index signature cannot have a rest parameter.",
        "An index signature parameter cannot have an accessibility modifier.": "An index signature parameter cannot have an accessibility modifier.",
        "An index signature parameter cannot have a question mark.": "An index signature parameter cannot have a question mark.",
        "An index signature parameter cannot have an initializer.": "An index signature parameter cannot have an initializer.",
        "An index signature must have a type annotation.": "An index signature must have a type annotation.",
        "An index signature parameter must have a type annotation.": "An index signature parameter must have a type annotation.",
        "An index signature parameter type must be 'string' or 'number'.": "An index signature parameter type must be 'string' or 'number'.",
        "A class or interface declaration can only have one 'extends' clause.": "A class or interface declaration can only have one 'extends' clause.",
        "An 'extends' clause must precede an 'implements' clause.": "An 'extends' clause must precede an 'implements' clause.",
        "A class can only extend a single class.": "A class can only extend a single class.",
        "A class declaration can only have one 'implements' clause.": "A class declaration can only have one 'implements' clause.",
        "Accessibility modifier already seen.": "Modificateur d'accessibilité déjà rencontré.",
        "'{0}' modifier must precede '{1}' modifier.": "Le modificateur '{0}' doit précéder le modificateur '{1}'.",
        "'{0}' modifier already seen.": "Modificateur '{0}' déjà rencontré.",
        "'{0}' modifier cannot appear on a class element.": "Le modificateur '{0}' ne peut pas apparaître dans un élément de classe.",
        "An interface declaration cannot have an 'implements' clause.": "An interface declaration cannot have an 'implements' clause.",
        "'super' must be followed by an argument list or member access.": "'super' must be followed by an argument list or member access.",
        "Only ambient modules can use quoted names.": "Seuls les modules ambiants peuvent utiliser de noms entre guillemets.",
        "Statements are not allowed in ambient contexts.": "Les instructions ne sont pas autorisées dans les contextes ambiants.",
        "A function implementation cannot be declared in an ambient context.": "A function implementation cannot be declared in an ambient context.",
        "A 'declare' modifier cannot be used in an already ambient context.": "A 'declare' modifier cannot be used in an already ambient context.",
        "Initializers are not allowed in ambient contexts.": "Les initialiseurs ne sont pas autorisés dans les contextes ambiants.",
        "'{0}' modifier cannot appear on a module element.": "Le modificateur '{0}' ne peut pas apparaître dans un élément de module.",
        "A 'declare' modifier cannot be used with an interface declaration.": "A 'declare' modifier cannot be used with an interface declaration.",
        "A 'declare' modifier is required for a top level declaration in a .d.ts file.": "A 'declare' modifier is required for a top level declaration in a .d.ts file.",
        "A rest parameter cannot be optional.": "A rest parameter cannot be optional.",
        "A rest parameter cannot have an initializer.": "A rest parameter cannot have an initializer.",
        "A 'set' accessor must have exactly one parameter.": "A 'set' accessor must have exactly one parameter.",
        "A 'set' accessor cannot have an optional parameter.": "A 'set' accessor cannot have an optional parameter.",
        "A 'set' accessor parameter cannot have an initializer.": "A 'set' accessor parameter cannot have an initializer.",
        "A 'set' accessor cannot have rest parameter.": "A 'set' accessor cannot have rest parameter.",
        "A 'get' accessor cannot have parameters.": "A 'get' accessor cannot have parameters.",
        "Accessors are only available when targeting ECMAScript 5 and higher.": "Les accesseurs sont disponibles uniquement lors du ciblage de EcmaScript 5 et ultérieures.",
        "Enum member must have initializer.": "Un membre enum doit posséder un initialiseur.",
        "An export assignment cannot be used in an internal module.": "An export assignment cannot be used in an internal module.",
        "Ambient enum elements can only have integer literal initializers.": "Les éléments d'enum ambiants peuvent uniquement avoir des initialiseurs de littéral d'entier.",
        "Unexpected token. A constructor, method, accessor, or property was expected.": "Unexpected token. A constructor, method, accessor, or property was expected.",
        "A 'declare' modifier cannot be used with an import declaration.": "A 'declare' modifier cannot be used with an import declaration.",
        "Invalid 'reference' directive syntax.": "Syntaxe de directive 'reference' non valide.",
        "Octal literals are not available when targeting ECMAScript 5 and higher.": "Les littéraux octaux ne sont pas disponibles lors du ciblage d'ECMAScript 5 et versions ultérieures.",
        "An accessor cannot be declared in an ambient context.": "An accessor cannot be declared in an ambient context.",
        "'{0}' modifier cannot appear on a constructor declaration.": "Le modificateur '{0}' ne peut pas apparaître sur une déclaration de constructeur.",
        "'{0}' modifier cannot appear on a parameter.": "Le modificateur '{0}' ne peut pas apparaître sur un paramètre.",
        "Only a single variable declaration is allowed in a 'for...in' statement.": "Une seule déclaration de variable est autorisée dans une instruction 'for...in'.",
        "Type parameters cannot appear on a constructor declaration.": "Les paramètres de type ne peuvent pas apparaître sur une déclaration de constructeur.",
        "Type annotation cannot appear on a constructor declaration.": "Une annotation de type ne peut pas apparaître sur une déclaration de constructeur.",
        "An accessor cannot have type parameters.": "An accessor cannot have type parameters.",
        "A 'set' accessor cannot have a return type annotation.": "A 'set' accessor cannot have a return type annotation.",
        "An index signature must have exactly one parameter.": "An index signature must have exactly one parameter.",
        "'{0}' list cannot be empty.": "'{0}' list cannot be empty.",
        "Type parameter list cannot be empty.": "Type parameter list cannot be empty.",
        "Type argument list cannot be empty.": "Type argument list cannot be empty.",
        "Invalid use of '{0}' in strict mode.": "Invalid use of '{0}' in strict mode.",
        "'with' statements are not allowed in strict mode.": "'with' statements are not allowed in strict mode.",
        "'delete' cannot be called on an identifier in strict mode.": "'delete' cannot be called on an identifier in strict mode.",
        "A 'continue' statement can only be used within an enclosing iteration statement.": "A 'continue' statement can only be used within an enclosing iteration statement.",
        "A 'break' statement can only be used within an enclosing iteration or switch statement.": "A 'break' statement can only be used within an enclosing iteration or switch statement.",
        "Jump target cannot cross function boundary.": "La cible du saut ne peut pas traverser une limite de fonction.",
        "A 'return' statement can only be used within a function body.": "A 'return' statement can only be used within a function body.",
        "Expression expected.": "Expression expected.",
        "Type expected.": "Type expected.",
        "A constructor implementation cannot be declared in an ambient context.": "A constructor implementation cannot be declared in an ambient context.",
        "A class member cannot be declared optional.": "A class member cannot be declared optional.",
        "A 'default' clause cannot appear more than once in a 'switch' statement.": "A 'default' clause cannot appear more than once in a 'switch' statement.",
        "Duplicate label '{0}'": "Duplicate label '{0}'",
        "A 'continue' statement can only jump to a label of an enclosing iteration statement.": "A 'continue' statement can only jump to a label of an enclosing iteration statement.",
        "A 'break' statement can only jump to a label of an enclosing statement.": "A 'break' statement can only jump to a label of an enclosing statement.",
        "An object literal cannot have multiple properties with the same name in strict mode.": "An object literal cannot have multiple properties with the same name in strict mode.",
        "An object literal cannot have multiple get/set accessors with the same name.": "An object literal cannot have multiple get/set accessors with the same name.",
        "An object literal cannot have property and accessor with the same name.": "An object literal cannot have property and accessor with the same name.",
        "An export assignment cannot have modifiers.": "An export assignment cannot have modifiers.",
        "Octal literals are not allowed in strict mode.": "Octal literals are not allowed in strict mode.",
        "A tuple type element list cannot be empty.": "A tuple type element list cannot be empty.",
        "Variable declaration list cannot be empty.": "Variable declaration list cannot be empty.",
        "Digit expected.": "Digit expected.",
        "Hexadecimal digit expected.": "Hexadecimal digit expected.",
        "Unexpected end of text.": "Unexpected end of text.",
        "Invalid character.": "Invalid character.",
        "Declaration or statement expected.": "Declaration or statement expected.",
        "Statement expected.": "Statement expected.",
        "'case' or 'default' expected.": "'case' or 'default' expected.",
        "Property or signature expected.": "Property or signature expected.",
        "Enum member expected.": "Enum member expected.",
        "Type reference expected.": "Type reference expected.",
        "Variable declaration expected.": "Variable declaration expected.",
        "Argument expression expected.": "Argument expression expected.",
        "Property assignment expected.": "Property assignment expected.",
        "Expression or comma expected.": "Expression or comma expected.",
        "Parameter declaration expected.": "Parameter declaration expected.",
        "Type parameter declaration expected.": "Type parameter declaration expected.",
        "Type argument expected.": "Type argument expected.",
        "String literal expected.": "String literal expected.",
        "Line break not permitted here.": "Line break not permitted here.",
        "'{' or ';' expected.": "'{' or ';' expected.",
        "Modifiers not permitted on index signature members.": "Modifiers not permitted on index signature members.",
        "Declaration expected.": "Declaration expected.",
        "Import declarations in an internal module cannot reference an external module.": "Les déclarations Import d'un module interne ne peuvent pas référencer un module externe.",
        "Cannot compile external modules unless the '--module' flag is provided.": "Impossible de compiler les modules externes, sauf si l'indicateur '--module' est fourni.",
        "Filename '{0}' differs from already included filename '{1}' only in casing": "Filename '{0}' differs from already included filename '{1}' only in casing",
        "'new T[]' cannot be used to create an array. Use 'new Array<T>()' instead.": "'new T[]' ne peut pas être utilisé pour créer un tableau. Utilisez 'new Array<T>()' à la place.",
        "'var', 'let' or 'const' expected.": "'var', 'let' or 'const' expected.",
        "'let' declarations are only available when targeting ECMAScript 6 and higher.": "'let' declarations are only available when targeting ECMAScript 6 and higher.",
        "'const' declarations are only available when targeting ECMAScript 6 and higher.": "'const' declarations are only available when targeting ECMAScript 6 and higher.",
        "'const' declarations must be initialized": "'const' declarations must be initialized",
        "'const' declarations can only be declared inside a block.": "'const' declarations can only be declared inside a block.",
        "'let' declarations can only be declared inside a block.": "'let' declarations can only be declared inside a block.",
        "Tagged templates are only available when targeting ECMAScript 6 and higher.": "Tagged templates are only available when targeting ECMAScript 6 and higher.",
        "Unterminated template literal.": "Unterminated template literal.",
        "Unterminated regular expression literal.": "Unterminated regular expression literal.",
        "An object member cannot be declared optional.": "An object member cannot be declared optional.",
        "'yield' expression must be contained_within a generator declaration.": "'yield' expression must be contained_within a generator declaration.",
        "Computed property names are not allowed in enums.": "Computed property names are not allowed in enums.",
        "Computed property names are not allowed in an ambient context.": "Computed property names are not allowed in an ambient context.",
        "Computed property names are not allowed in class property declarations.": "Computed property names are not allowed in class property declarations.",
        "Computed property names are only available when targeting ECMAScript 6 and higher.": "Computed property names are only available when targeting ECMAScript 6 and higher.",
        "Computed property names are not allowed in method overloads.": "Computed property names are not allowed in method overloads.",
        "Computed property names are not allowed in interfaces.": "Computed property names are not allowed in interfaces.",
        "Computed property names are not allowed in type literals.": "Computed property names are not allowed in type literals.",
        "A comma expression is not allowed in a computed property name.": "A comma expression is not allowed in a computed property name.",
        "'extends' clause already seen.": "Clause 'extends' déjà rencontrée.",
        "'extends' clause must precede 'implements' clause.": "La clause 'extends' doit précéder la clause 'implements'.",
        "Classes can only extend a single class.": "Les classes peuvent seulement étendre une classe unique.",
        "'implements' clause already seen.": "Clause 'implements' déjà rencontrée.",
        "Interface declaration cannot have 'implements' clause.": "Une déclaration Interface ne peut pas avoir de clause 'implements'.",
        "Binary digit expected.": "Binary digit expected.",
        "Octal digit expected.": "Octal digit expected.",
        "Unexpected token. '{' expected.": "Unexpected token. '{' expected.",
        "Duplicate identifier '{0}'.": "Dupliquer le modificateur '{0}'.",
        "Initializer of instance member variable '{0}' cannot reference identifier '{1}' declared in the constructor.": "L'initialiseur de la variable membre d'instance '{0}' ne peut pas faire référence à l'identificateur '{1}' déclaré dans le constructeur.",
        "Static members cannot reference class type parameters.": "Les membres statiques ne peuvent pas faire référence à des paramètres de type de classe.",
        "Circular definition of import alias '{0}'.": "Circular definition of import alias '{0}'.",
        "Cannot find name '{0}'.": "Cannot find name '{0}'.",
        "Module '{0}' has no exported member '{1}'.": "Module '{0}' has no exported member '{1}'.",
        "File '{0}' is not an external module.": "File '{0}' is not an external module.",
        "Cannot find external module '{0}'.": "Cannot find external module '{0}'.",
        "A module cannot have more than one export assignment.": "A module cannot have more than one export assignment.",
        "An export assignment cannot be used in a module with other exported elements.": "An export assignment cannot be used in a module with other exported elements.",
        "Type '{0}' recursively references itself as a base type.": "Type '{0}' recursively references itself as a base type.",
        "A class may only extend another class.": "Une classe peut uniquement étendre une autre classe.",
        "An interface may only extend a class or another interface.": "An interface may only extend a class or another interface.",
        "Constraint of a type parameter cannot reference any type parameter from the same type parameter list.": "La contrainte d'un paramètre de type ne peut pas faire référence à un paramètre de type de la même liste de paramètres de type.",
        "Generic type '{0}' requires {1} type argument(s).": "Le type générique '{0}' requiert {1} arguments de type.",
        "Type '{0}' is not generic.": "Type '{0}' is not generic.",
        "Global type '{0}' must be a class or interface type.": "Global type '{0}' must be a class or interface type.",
        "Global type '{0}' must have {1} type parameter(s).": "Global type '{0}' must have {1} type parameter(s).",
        "Cannot find global type '{0}'.": "Cannot find global type '{0}'.",
        "Named properties '{0}' of types '{1}' and '{2}' are not identical.": "Les propriétés nommées '{0}' de types '{1}' et '{2}' ne sont pas identiques.",
        "Interface '{0}' cannot simultaneously extend types '{1}' and '{2}'.": "Interface '{0}' cannot simultaneously extend types '{1}' and '{2}'.",
        "Excessive stack depth comparing types '{0}' and '{1}'.": "Excessive stack depth comparing types '{0}' and '{1}'.",
        "Type '{0}' is not assignable to type '{1}'.": "Type '{0}' is not assignable to type '{1}'.",
        "Property '{0}' is missing in type '{1}'.": "Property '{0}' is missing in type '{1}'.",
        "Property '{0}' is private in type '{1}' but not in type '{2}'.": "Property '{0}' is private in type '{1}' but not in type '{2}'.",
        "Types of property '{0}' are incompatible.": "Types of property '{0}' are incompatible.",
        "Property '{0}' is optional in type '{1}' but required in type '{2}'.": "Property '{0}' is optional in type '{1}' but required in type '{2}'.",
        "Types of parameters '{0}' and '{1}' are incompatible.": "Types of parameters '{0}' and '{1}' are incompatible.",
        "Index signature is missing in type '{0}'.": "Index signature is missing in type '{0}'.",
        "Index signatures are incompatible.": "Index signatures are incompatible.",
        "'this' cannot be referenced in a module body.": "'this' cannot be referenced in a module body.",
        "'this' cannot be referenced in current location.": "'this' ne peut pas être référencé dans l'emplacement actuel.",
        "'this' cannot be referenced in constructor arguments.": "'this' ne peut pas être référencé dans les arguments de constructeur.",
        "'this' cannot be referenced in a static property initializer.": "'this' cannot be referenced in a static property initializer.",
        "'super' can only be referenced in a derived class.": "'super' can only be referenced in a derived class.",
        "'super' cannot be referenced in constructor arguments.": "'super' ne peut pas être référencé dans des arguments de constructeur.",
        "Super calls are not permitted outside constructors or in nested functions inside constructors": "Super calls are not permitted outside constructors or in nested functions inside constructors",
        "'super' property access is permitted only in a constructor, member function, or member accessor of a derived class": "'super' property access is permitted only in a constructor, member function, or member accessor of a derived class",
        "Property '{0}' does not exist on type '{1}'.": "Property '{0}' does not exist on type '{1}'.",
        "Only public and protected methods of the base class are accessible via the 'super' keyword": "Only public and protected methods of the base class are accessible via the 'super' keyword",
        "Property '{0}' is private and only accessible within class '{1}'.": "Property '{0}' is private and only accessible within class '{1}'.",
        "An index expression argument must be of type 'string', 'number', or 'any'.": "An index expression argument must be of type 'string', 'number', or 'any'.",
        "Type '{0}' does not satisfy the constraint '{1}'.": "Type '{0}' does not satisfy the constraint '{1}'.",
        "Argument of type '{0}' is not assignable to parameter of type '{1}'.": "Argument of type '{0}' is not assignable to parameter of type '{1}'.",
        "Supplied parameters do not match any signature of call target.": "Les paramètres fournis ne correspondent à aucune signature de la cible de l'appel.",
        "Untyped function calls may not accept type arguments.": "Les appels de fonctions non typées ne peuvent pas accepter d'arguments de type.",
        "Value of type '{0}' is not callable. Did you mean to include 'new'?": "La valeur de type '{0}' ne peut pas être appelée. Voulez-vous inclure 'new' ?",
        "Cannot invoke an expression whose type lacks a call signature.": "Impossible d'appeler une expression dont le type ne possède pas de signature d'appel.",
        "Only a void function can be called with the 'new' keyword.": "Only a void function can be called with the 'new' keyword.",
        "Cannot use 'new' with an expression whose type lacks a call or construct signature.": "Cannot use 'new' with an expression whose type lacks a call or construct signature.",
        "Neither type '{0}' nor type '{1}' is assignable to the other.": "Neither type '{0}' nor type '{1}' is assignable to the other.",
        "No best common type exists among return expressions.": "No best common type exists among return expressions.",
        "A function whose declared type is neither 'void' nor 'any' must return a value or consist of a single 'throw' statement.": "A function whose declared type is neither 'void' nor 'any' must return a value or consist of a single 'throw' statement.",
        "An arithmetic operand must be of type 'any', 'number' or an enum type.": "An arithmetic operand must be of type 'any', 'number' or an enum type.",
        "The operand of an increment or decrement operator must be a variable, property or indexer.": "L'opérande d'un opérateur d'incrémentation ou de décrémentation doit être une variable, une propriété ou un indexeur.",
        "The left-hand side of an 'instanceof' expression must be of type 'any', an object type or a type parameter.": "La partie gauche d'une expression 'instanceof' doit être de type 'any', un type d'objet ou un paramètre de type.",
        "The right-hand side of an 'instanceof' expression must be of type 'any' or of a type assignable to the 'Function' interface type.": "La partie droite d'une expression 'instanceof' doit être de type 'any' ou d'un type assignable au type d'interface 'Function'.",
        "The left-hand side of an 'in' expression must be of types 'any', 'string' or 'number'.": "Le côté gauche d'une expression 'in' doit être de type 'any', 'string' ou 'number'.",
        "The right-hand side of an 'in' expression must be of type 'any', an object type or a type parameter": "The right-hand side of an 'in' expression must be of type 'any', an object type or a type parameter",
        "The left-hand side of an arithmetic operation must be of type 'any', 'number' or an enum type.": "La partie gauche d'une opération arithmétique doit être de type 'any', 'number' ou un type enum.",
        "The right-hand side of an arithmetic operation must be of type 'any', 'number' or an enum type.": "La partie droite d'une opération arithmétique doit être de type 'any', 'number' ou un type enum.",
        "Invalid left-hand side of assignment expression.": "Partie gauche de l'expression d'assignation non valide.",
        "Operator '{0}' cannot be applied to types '{1}' and '{2}'.": "L'opérateur '{0}' ne peut pas être appliqué aux types '{1}' et '{2}'.",
        "Type parameter name cannot be '{0}'": "Type parameter name cannot be '{0}'",
        "A parameter property is only allowed in a constructor implementation.": "A parameter property is only allowed in a constructor implementation.",
        "A rest parameter must be of an array type.": "A rest parameter must be of an array type.",
        "A parameter initializer is only allowed in a function or constructor implementation.": "A parameter initializer is only allowed in a function or constructor implementation.",
        "Parameter '{0}' cannot be referenced in its initializer.": "Le paramètre '{0}' ne peut pas être référencé dans son initialiseur.",
        "Initializer of parameter '{0}' cannot reference identifier '{1}' declared after it.": "L'initialiseur du paramètre '{0}' ne peut pas faire référence à l'identificateur '{1}' déclaré après lui.",
        "Duplicate string index signature.": "Signature d'index de chaîne dupliquée.",
        "Duplicate number index signature.": "Signature d'index de nombre dupliquée.",
        "A 'super' call must be the first statement in the constructor when a class contains initialized properties or has parameter properties.": "Un appel de 'super' doit être la première instruction du constructeur lorsqu'une classe contient des propriétés initialisées ou possède des propriétés de paramètre.",
        "Constructors for derived classes must contain a 'super' call.": "Les constructeurs pour les classes dérivées doivent contenir un appel de 'super'.",
        "A 'get' accessor must return a value or consist of a single 'throw' statement.": "A 'get' accessor must return a value or consist of a single 'throw' statement.",
        "Getter and setter accessors do not agree in visibility.": "Les accesseurs Get et Set ne sont pas en accord sur la visibilité.",
        "'get' and 'set' accessor must have the same type.": "Les accesseurs 'get' et 'set' doivent avoir le même type.",
        "A signature with an implementation cannot use a string literal type.": "A signature with an implementation cannot use a string literal type.",
        "Specialized overload signature is not assignable to any non-specialized signature.": "La signature de surcharge spécialisée n'est assignable à aucune signature non spécialisée.",
        "Overload signatures must all be exported or not exported.": "Les signatures de surcharge doivent toutes être exportées ou non exportées.",
        "Overload signatures must all be ambient or non-ambient.": "Les signatures de surcharge doivent toutes être ambiantes ou non ambiantes.",
        "Overload signatures must all be public, private or protected.": "Overload signatures must all be public, private or protected.",
        "Overload signatures must all be optional or required.": "Les signatures de surcharge doivent toutes être facultatives ou requises.",
        "Function overload must be static.": "La surcharge de fonction doit être statique.",
        "Function overload must not be static.": "La surcharge de fonction ne doit pas être statique.",
        "Function implementation name must be '{0}'.": "Function implementation name must be '{0}'.",
        "Constructor implementation is missing.": "Constructor implementation is missing.",
        "Function implementation is missing or not immediately following the declaration.": "Function implementation is missing or not immediately following the declaration.",
        "Multiple constructor implementations are not allowed.": "Les implémentations de plusieurs constructeurs ne sont pas autorisées.",
        "Duplicate function implementation.": "Duplicate function implementation.",
        "Overload signature is not compatible with function implementation.": "Overload signature is not compatible with function implementation.",
        "Individual declarations in merged declaration {0} must be all exported or all local.": "Individual declarations in merged declaration {0} must be all exported or all local.",
        "Duplicate identifier 'arguments'. Compiler uses 'arguments' to initialize rest parameters.": "Identificateur dupliqué 'arguments'. Le compilateur utilise 'arguments' pour initialiser les paramètres rest.",
        "Duplicate identifier '_i'. Compiler uses '_i' to initialize rest parameter.": "Identificateur dupliqué '_i'. Le compilateur utilise '_i' pour initialiser le paramètre rest.",
        "Expression resolves to variable declaration '_i' that compiler uses to initialize rest parameter.": "L'expression est résolue en la déclaration de variable '_i' utilisée par le compilateur pour initialiser le paramètre rest.",
        "Duplicate identifier '_this'. Compiler uses variable declaration '_this' to capture 'this' reference.": "Identificateur dupliqué '_this'. Le compilateur utilise la déclaration de variable '_this' pour capturer la référence 'this'.",
        "Expression resolves to variable declaration '_this' that compiler uses to capture 'this' reference.": "Expression résolue en déclaration de variable '_this' et utilisée par le compilateur pour capturer la référence 'this'.",
        "Duplicate identifier '_super'. Compiler uses '_super' to capture base class reference.": "Identificateur dupliqué '_super'. Le compilateur utilise '_super' pour capturer la référence de classe de base.",
        "Expression resolves to '_super' that compiler uses to capture base class reference.": "Expression résolue en '_super' et utilisée par le compilateur pour capturer la référence de classe de base.",
        "Subsequent variable declarations must have the same type.  Variable '{0}' must be of type '{1}', but here has type '{2}'.": "Les déclarations de variable ultérieures doivent avoir le même type. La variable '{0}' doit être de type '{1}', mais elle a ici le type '{2}'.",
        "The left-hand side of a 'for...in' statement cannot use a type annotation.": "The left-hand side of a 'for...in' statement cannot use a type annotation.",
        "The left-hand side of a 'for...in' statement must be of type 'string' or 'any'.": "The left-hand side of a 'for...in' statement must be of type 'string' or 'any'.",
        "Invalid left-hand side in 'for...in' statement.": "Invalid left-hand side in 'for...in' statement.",
        "The right-hand side of a 'for...in' statement must be of type 'any', an object type or a type parameter.": "La partie droite d'une instruction 'for...in' doit être de type 'any', un type d'objet ou un paramètre de type.",
        "Setters cannot return a value.": "Les méthodes setter ne peuvent pas retourner une valeur.",
        "Return type of constructor signature must be assignable to the instance type of the class": "Return type of constructor signature must be assignable to the instance type of the class",
        "All symbols within a 'with' block will be resolved to 'any'.": "All symbols within a 'with' block will be resolved to 'any'.",
        "Property '{0}' of type '{1}' is not assignable to string index type '{2}'.": "Property '{0}' of type '{1}' is not assignable to string index type '{2}'.",
        "Property '{0}' of type '{1}' is not assignable to numeric index type '{2}'.": "Property '{0}' of type '{1}' is not assignable to numeric index type '{2}'.",
        "Numeric index type '{0}' is not assignable to string index type '{1}'.": "Numeric index type '{0}' is not assignable to string index type '{1}'.",
        "Class name cannot be '{0}'": "Class name cannot be '{0}'",
        "Class '{0}' incorrectly extends base class '{1}'.": "Class '{0}' incorrectly extends base class '{1}'.",
        "Class static side '{0}' incorrectly extends base class static side '{1}'.": "Class static side '{0}' incorrectly extends base class static side '{1}'.",
        "Type name '{0}' in extends clause does not reference constructor function for '{0}'.": "Type name '{0}' in extends clause does not reference constructor function for '{0}'.",
        "Class '{0}' incorrectly implements interface '{1}'.": "Class '{0}' incorrectly implements interface '{1}'.",
        "A class may only implement another class or interface.": "Une classe peut uniquement implémenter une autre classe ou interface.",
        "Class '{0}' defines instance member function '{1}', but extended class '{2}' defines it as instance member accessor.": "La classe '{0}' définit la fonction de membre d'instance '{1}', mais la classe étendue '{2}' le définit comme accesseur de membre d'instance.",
        "Class '{0}' defines instance member function '{1}', but extended class '{2}' defines it as instance member property.": "La classe '{0}' définit la fonction de membre d'instance '{1}', mais la classe étendue '{2}' le définit comme propriété de membre d'instance.",
        "Class '{0}' defines instance member property '{1}', but extended class '{2}' defines it as instance member function.": "La classe '{0}' définit la propriété de membre d'instance '{1}', mais la classe étendue '{2}' le définit comme fonction de membre d'instance.",
        "Class '{0}' defines instance member accessor '{1}', but extended class '{2}' defines it as instance member function.": "La classe '{0}' définit l'accesseur de membre d'instance '{1}', mais la classe étendue '{2}' le définit comme fonction de membre d'instance.",
        "Interface name cannot be '{0}'": "Interface name cannot be '{0}'",
        "All declarations of an interface must have identical type parameters.": "Toutes les déclarations d'une interface doivent avoir des paramètres de type identiques.",
        "Interface '{0}' incorrectly extends interface '{1}'.": "Interface '{0}' incorrectly extends interface '{1}'.",
        "Enum name cannot be '{0}'": "Enum name cannot be '{0}'",
        "In an enum with multiple declarations, only one declaration can omit an initializer for its first enum element.": "In an enum with multiple declarations, only one declaration can omit an initializer for its first enum element.",
        "A module declaration cannot be in a different file from a class or function with which it is merged": "A module declaration cannot be in a different file from a class or function with which it is merged",
        "A module declaration cannot be located prior to a class or function with which it is merged": "A module declaration cannot be located prior to a class or function with which it is merged",
        "Ambient external modules cannot be nested in other modules.": "Ambient external modules cannot be nested in other modules.",
        "Ambient external module declaration cannot specify relative module name.": "La déclaration de module externe ambiante ne peut pas spécifier de nom de module relatif.",
        "Module '{0}' is hidden by a local declaration with the same name": "Module '{0}' is hidden by a local declaration with the same name",
        "Import name cannot be '{0}'": "Import name cannot be '{0}'",
        "Import declaration in an ambient external module declaration cannot reference external module through relative external module name.": "La déclaration d'importation dans une déclaration de module externe ambiante ne peut pas faire référence au module externe par l'intermédiaire du nom de module externe relatif.",
        "Import declaration conflicts with local declaration of '{0}'": "Import declaration conflicts with local declaration of '{0}'",
        "Duplicate identifier '{0}'. Compiler reserves name '{1}' in top level scope of an external module.": "Identificateur dupliqué '{0}'. Le compilateur réserve le nom '{1}' dans la portée de niveau supérieur d'un module externe.",
        "Types have separate declarations of a private property '{0}'.": "Types have separate declarations of a private property '{0}'.",
        "Property '{0}' is protected but type '{1}' is not a class derived from '{2}'.": "Property '{0}' is protected but type '{1}' is not a class derived from '{2}'.",
        "Property '{0}' is protected in type '{1}' but public in type '{2}'.": "Property '{0}' is protected in type '{1}' but public in type '{2}'.",
        "Property '{0}' is protected and only accessible within class '{1}' and its subclasses.": "Property '{0}' is protected and only accessible within class '{1}' and its subclasses.",
        "Property '{0}' is protected and only accessible through an instance of class '{1}'.": "Property '{0}' is protected and only accessible through an instance of class '{1}'.",
        "The '{0}' operator is not allowed for boolean types. Consider using '{1}' instead.": "The '{0}' operator is not allowed for boolean types. Consider using '{1}' instead.",
        "Block-scoped variable '{0}' used before its declaration.": "Block-scoped variable '{0}' used before its declaration.",
        "The operand of an increment or decrement operator cannot be a constant.": "The operand of an increment or decrement operator cannot be a constant.",
        "Left-hand side of assignment expression cannot be a constant.": "Left-hand side of assignment expression cannot be a constant.",
        "Cannot redeclare block-scoped variable '{0}'.": "Cannot redeclare block-scoped variable '{0}'.",
        "An enum member cannot have a numeric name.": "An enum member cannot have a numeric name.",
        "The type argument for type parameter '{0}' cannot be inferred from the usage. Consider specifying the type arguments explicitly.": "The type argument for type parameter '{0}' cannot be inferred from the usage. Consider specifying the type arguments explicitly.",
        "Type argument candidate '{1}' is not a valid type argument because it is not a supertype of candidate '{0}'.": "Type argument candidate '{1}' is not a valid type argument because it is not a supertype of candidate '{0}'.",
        "Type alias '{0}' circularly references itself.": "Type alias '{0}' circularly references itself.",
        "Type alias name cannot be '{0}'": "Type alias name cannot be '{0}'",
        "An AMD module cannot have multiple name assignments.": "An AMD module cannot have multiple name assignments.",
        "Import declaration '{0}' is using private name '{1}'.": "Import declaration '{0}' is using private name '{1}'.",
        "Type parameter '{0}' of exported class has or is using private name '{1}'.": "Type parameter '{0}' of exported class has or is using private name '{1}'.",
        "Type parameter '{0}' of exported interface has or is using private name '{1}'.": "Type parameter '{0}' of exported interface has or is using private name '{1}'.",
        "Type parameter '{0}' of constructor signature from exported interface has or is using private name '{1}'.": "Type parameter '{0}' of constructor signature from exported interface has or is using private name '{1}'.",
        "Type parameter '{0}' of call signature from exported interface has or is using private name '{1}'.": "Type parameter '{0}' of call signature from exported interface has or is using private name '{1}'.",
        "Type parameter '{0}' of public static method from exported class has or is using private name '{1}'.": "Type parameter '{0}' of public static method from exported class has or is using private name '{1}'.",
        "Type parameter '{0}' of public method from exported class has or is using private name '{1}'.": "Type parameter '{0}' of public method from exported class has or is using private name '{1}'.",
        "Type parameter '{0}' of method from exported interface has or is using private name '{1}'.": "Type parameter '{0}' of method from exported interface has or is using private name '{1}'.",
        "Type parameter '{0}' of exported function has or is using private name '{1}'.": "Type parameter '{0}' of exported function has or is using private name '{1}'.",
        "Implements clause of exported class '{0}' has or is using private name '{1}'.": "Implements clause of exported class '{0}' has or is using private name '{1}'.",
        "Extends clause of exported class '{0}' has or is using private name '{1}'.": "Extends clause of exported class '{0}' has or is using private name '{1}'.",
        "Extends clause of exported interface '{0}' has or is using private name '{1}'.": "Extends clause of exported interface '{0}' has or is using private name '{1}'.",
        "Exported variable '{0}' has or is using name '{1}' from external module {2} but cannot be named.": "Exported variable '{0}' has or is using name '{1}' from external module {2} but cannot be named.",
        "Exported variable '{0}' has or is using name '{1}' from private module '{2}'.": "Exported variable '{0}' has or is using name '{1}' from private module '{2}'.",
        "Exported variable '{0}' has or is using private name '{1}'.": "Exported variable '{0}' has or is using private name '{1}'.",
        "Public static property '{0}' of exported class has or is using name '{1}' from external module {2} but cannot be named.": "Public static property '{0}' of exported class has or is using name '{1}' from external module {2} but cannot be named.",
        "Public static property '{0}' of exported class has or is using name '{1}' from private module '{2}'.": "Public static property '{0}' of exported class has or is using name '{1}' from private module '{2}'.",
        "Public static property '{0}' of exported class has or is using private name '{1}'.": "Public static property '{0}' of exported class has or is using private name '{1}'.",
        "Public property '{0}' of exported class has or is using name '{1}' from external module {2} but cannot be named.": "Public property '{0}' of exported class has or is using name '{1}' from external module {2} but cannot be named.",
        "Public property '{0}' of exported class has or is using name '{1}' from private module '{2}'.": "Public property '{0}' of exported class has or is using name '{1}' from private module '{2}'.",
        "Public property '{0}' of exported class has or is using private name '{1}'.": "Public property '{0}' of exported class has or is using private name '{1}'.",
        "Property '{0}' of exported interface has or is using name '{1}' from private module '{2}'.": "Property '{0}' of exported interface has or is using name '{1}' from private module '{2}'.",
        "Property '{0}' of exported interface has or is using private name '{1}'.": "Property '{0}' of exported interface has or is using private name '{1}'.",
        "Parameter '{0}' of public static property setter from exported class has or is using name '{1}' from private module '{2}'.": "Parameter '{0}' of public static property setter from exported class has or is using name '{1}' from private module '{2}'.",
        "Parameter '{0}' of public static property setter from exported class has or is using private name '{1}'.": "Parameter '{0}' of public static property setter from exported class has or is using private name '{1}'.",
        "Parameter '{0}' of public property setter from exported class has or is using name '{1}' from private module '{2}'.": "Parameter '{0}' of public property setter from exported class has or is using name '{1}' from private module '{2}'.",
        "Parameter '{0}' of public property setter from exported class has or is using private name '{1}'.": "Parameter '{0}' of public property setter from exported class has or is using private name '{1}'.",
        "Return type of public static property getter from exported class has or is using name '{0}' from external module {1} but cannot be named.": "Return type of public static property getter from exported class has or is using name '{0}' from external module {1} but cannot be named.",
        "Return type of public static property getter from exported class has or is using name '{0}' from private module '{1}'.": "Return type of public static property getter from exported class has or is using name '{0}' from private module '{1}'.",
        "Return type of public static property getter from exported class has or is using private name '{0}'.": "Return type of public static property getter from exported class has or is using private name '{0}'.",
        "Return type of public property getter from exported class has or is using name '{0}' from external module {1} but cannot be named.": "Return type of public property getter from exported class has or is using name '{0}' from external module {1} but cannot be named.",
        "Return type of public property getter from exported class has or is using name '{0}' from private module '{1}'.": "Return type of public property getter from exported class has or is using name '{0}' from private module '{1}'.",
        "Return type of public property getter from exported class has or is using private name '{0}'.": "Return type of public property getter from exported class has or is using private name '{0}'.",
        "Return type of constructor signature from exported interface has or is using name '{0}' from private module '{1}'.": "Return type of constructor signature from exported interface has or is using name '{0}' from private module '{1}'.",
        "Return type of constructor signature from exported interface has or is using private name '{0}'.": "Return type of constructor signature from exported interface has or is using private name '{0}'.",
        "Return type of call signature from exported interface has or is using name '{0}' from private module '{1}'.": "Return type of call signature from exported interface has or is using name '{0}' from private module '{1}'.",
        "Return type of call signature from exported interface has or is using private name '{0}'.": "Return type of call signature from exported interface has or is using private name '{0}'.",
        "Return type of index signature from exported interface has or is using name '{0}' from private module '{1}'.": "Return type of index signature from exported interface has or is using name '{0}' from private module '{1}'.",
        "Return type of index signature from exported interface has or is using private name '{0}'.": "Return type of index signature from exported interface has or is using private name '{0}'.",
        "Return type of public static method from exported class has or is using name '{0}' from external module {1} but cannot be named.": "Return type of public static method from exported class has or is using name '{0}' from external module {1} but cannot be named.",
        "Return type of public static method from exported class has or is using name '{0}' from private module '{1}'.": "Return type of public static method from exported class has or is using name '{0}' from private module '{1}'.",
        "Return type of public static method from exported class has or is using private name '{0}'.": "Return type of public static method from exported class has or is using private name '{0}'.",
        "Return type of public method from exported class has or is using name '{0}' from external module {1} but cannot be named.": "Return type of public method from exported class has or is using name '{0}' from external module {1} but cannot be named.",
        "Return type of public method from exported class has or is using name '{0}' from private module '{1}'.": "Return type of public method from exported class has or is using name '{0}' from private module '{1}'.",
        "Return type of public method from exported class has or is using private name '{0}'.": "Return type of public method from exported class has or is using private name '{0}'.",
        "Return type of method from exported interface has or is using name '{0}' from private module '{1}'.": "Return type of method from exported interface has or is using name '{0}' from private module '{1}'.",
        "Return type of method from exported interface has or is using private name '{0}'.": "Return type of method from exported interface has or is using private name '{0}'.",
        "Return type of exported function has or is using name '{0}' from external module {1} but cannot be named.": "Return type of exported function has or is using name '{0}' from external module {1} but cannot be named.",
        "Return type of exported function has or is using name '{0}' from private module '{1}'.": "Return type of exported function has or is using name '{0}' from private module '{1}'.",
        "Return type of exported function has or is using private name '{0}'.": "Return type of exported function has or is using private name '{0}'.",
        "Parameter '{0}' of constructor from exported class has or is using name '{1}' from external module {2} but cannot be named.": "Parameter '{0}' of constructor from exported class has or is using name '{1}' from external module {2} but cannot be named.",
        "Parameter '{0}' of constructor from exported class has or is using name '{1}' from private module '{2}'.": "Parameter '{0}' of constructor from exported class has or is using name '{1}' from private module '{2}'.",
        "Parameter '{0}' of constructor from exported class has or is using private name '{1}'.": "Parameter '{0}' of constructor from exported class has or is using private name '{1}'.",
        "Parameter '{0}' of constructor signature from exported interface has or is using name '{1}' from private module '{2}'.": "Parameter '{0}' of constructor signature from exported interface has or is using name '{1}' from private module '{2}'.",
        "Parameter '{0}' of constructor signature from exported interface has or is using private name '{1}'.": "Parameter '{0}' of constructor signature from exported interface has or is using private name '{1}'.",
        "Parameter '{0}' of call signature from exported interface has or is using name '{1}' from private module '{2}'.": "Parameter '{0}' of call signature from exported interface has or is using name '{1}' from private module '{2}'.",
        "Parameter '{0}' of call signature from exported interface has or is using private name '{1}'.": "Parameter '{0}' of call signature from exported interface has or is using private name '{1}'.",
        "Parameter '{0}' of public static method from exported class has or is using name '{1}' from external module {2} but cannot be named.": "Parameter '{0}' of public static method from exported class has or is using name '{1}' from external module {2} but cannot be named.",
        "Parameter '{0}' of public static method from exported class has or is using name '{1}' from private module '{2}'.": "Parameter '{0}' of public static method from exported class has or is using name '{1}' from private module '{2}'.",
        "Parameter '{0}' of public static method from exported class has or is using private name '{1}'.": "Parameter '{0}' of public static method from exported class has or is using private name '{1}'.",
        "Parameter '{0}' of public method from exported class has or is using name '{1}' from external module {2} but cannot be named.": "Parameter '{0}' of public method from exported class has or is using name '{1}' from external module {2} but cannot be named.",
        "Parameter '{0}' of public method from exported class has or is using name '{1}' from private module '{2}'.": "Parameter '{0}' of public method from exported class has or is using name '{1}' from private module '{2}'.",
        "Parameter '{0}' of public method from exported class has or is using private name '{1}'.": "Parameter '{0}' of public method from exported class has or is using private name '{1}'.",
        "Parameter '{0}' of method from exported interface has or is using name '{1}' from private module '{2}'.": "Parameter '{0}' of method from exported interface has or is using name '{1}' from private module '{2}'.",
        "Parameter '{0}' of method from exported interface has or is using private name '{1}'.": "Parameter '{0}' of method from exported interface has or is using private name '{1}'.",
        "Parameter '{0}' of exported function has or is using name '{1}' from external module {2} but cannot be named.": "Parameter '{0}' of exported function has or is using name '{1}' from external module {2} but cannot be named.",
        "Parameter '{0}' of exported function has or is using name '{1}' from private module '{2}'.": "Parameter '{0}' of exported function has or is using name '{1}' from private module '{2}'.",
        "Parameter '{0}' of exported function has or is using private name '{1}'.": "Parameter '{0}' of exported function has or is using private name '{1}'.",
        "Exported type alias '{0}' has or is using private name '{1}'.": "Exported type alias '{0}' has or is using private name '{1}'.",
        "Enum declarations must all be const or non-const.": "Enum declarations must all be const or non-const.",
        "In 'const' enum declarations member initializer must be constant expression.": "In 'const' enum declarations member initializer must be constant expression.",
        "'const' enums can only be used in property or index access expressions or the right hand side of an import declaration or export assignment.": "'const' enums can only be used in property or index access expressions or the right hand side of an import declaration or export assignment.",
        "Index expression arguments in 'const' enums must be of type 'string'.": "Index expression arguments in 'const' enums must be of type 'string'.",
        "'const' enum member initializer was evaluated to a non-finite value.": "'const' enum member initializer was evaluated to a non-finite value.",
        "'const' enum member initializer was evaluated to disallowed value 'NaN'.": "'const' enum member initializer was evaluated to disallowed value 'NaN'.",
        "The current host does not support the '{0}' option.": "The current host does not support the '{0}' option.",
        "Cannot find the common subdirectory path for the input files.": "Impossible de trouver le chemin d'accès au sous-répertoire commun pour les fichiers d'entrée.",
        "Cannot read file '{0}': {1}": "Impossible de lire le fichier '{0}' : {1}",
        "Unsupported file encoding.": "Encodage de fichier non pris en charge.",
        "Unknown compiler option '{0}'.": "Unknown compiler option '{0}'.",
        "Could not write file '{0}': {1}": "Could not write file '{0}': {1}",
        "Option mapRoot cannot be specified without specifying sourcemap option.": "Impossible de spécifier l'option mapRoot sans spécifier l'option de mappage de source.",
        "Option sourceRoot cannot be specified without specifying sourcemap option.": "Impossible de spécifier l'option sourceRoot sans spécifier l'option de mappage de source.",
        "Concatenate and emit output to single file.": "Concaténer la sortie et l'émettre vers un seul fichier.",
        "Generates corresponding '.d.ts' file.": "Generates corresponding '.d.ts' file.",
        "Specifies the location where debugger should locate map files instead of generated locations.": "Spécifie l'emplacement dans lequel le débogueur doit localiser les fichiers de mappage plutôt que les emplacements générés.",
        "Specifies the location where debugger should locate TypeScript files instead of source locations.": "Spécifie l'emplacement dans lequel le débogueur doit localiser les fichiers TypeScript plutôt que les emplacements source.",
        "Watch input files.": "Fichiers d'entrée d'espion.",
        "Redirect output structure to the directory.": "Rediriger la structure de sortie vers le répertoire.",
        "Do not erase const enum declarations in generated code.": "Do not erase const enum declarations in generated code.",
        "Do not emit outputs if any type checking errors were reported.": "Do not emit outputs if any type checking errors were reported.",
        "Do not emit comments to output.": "Ne pas publier de commentaires dans la sortie.",
        "Specify ECMAScript target version: 'ES3' (default), 'ES5', or 'ES6' (experimental)": "Specify ECMAScript target version: 'ES3' (default), 'ES5', or 'ES6' (experimental)",
        "Specify module code generation: 'commonjs' or 'amd'": "Specify module code generation: 'commonjs' or 'amd'",
        "Print this message.": "Imprimer ce message.",
        "Print the compiler's version.": "Print the compiler's version.",
        "Syntax: {0}": "Syntax: {0}",
        "options": "options",
        "file1": "fichier",
        "Examples: {0}": "Examples: {0}",
        "Options:": "Options :",
        "Version {0}": "Version {0}",
        "Insert command line options and files from a file.": "Insérer les options de ligne de commande et les fichiers à partir d'un fichier texte.",
        "File change detected. Compiling...": "File change detected. Compiling...",
        "KIND": "GENRE",
        "file2": "FICHIER",
        "VERSION": "VERSION",
        "LOCATION": "EMPLACEMENT",
        "DIRECTORY": "RÉPERTOIRE",
        "Compilation complete. Watching for file changes.": "Compilation complete. Watching for file changes.",
        "Generates corresponding '.map' file.": "Generates corresponding '.map' file.",
        "Compiler option '{0}' expects an argument.": "Compiler option '{0}' expects an argument.",
        "Unterminated quoted string in response file '{0}'.": "Unterminated quoted string in response file '{0}'.",
        "Argument for '--module' option must be 'commonjs' or 'amd'.": "Argument for '--module' option must be 'commonjs' or 'amd'.",
        "Argument for '--target' option must be 'es3', 'es5', or 'es6'.": "Argument for '--target' option must be 'es3', 'es5', or 'es6'.",
        "Locale must be of the form <language> or <language>-<territory>. For example '{0}' or '{1}'.": "Les paramètres régionaux doivent être sous la forme <langue> ou <langue>-<territoire>. Par exemple '{0}' ou '{1}'.",
        "Unsupported locale '{0}'.": "Unsupported locale '{0}'.",
        "Unable to open file '{0}'.": "Unable to open file '{0}'.",
        "Corrupted locale file {0}.": "Corrupted locale file {0}.",
        "Warn on expressions and declarations with an implied 'any' type.": "Avertit en cas d'expressions et de déclarations possédant un type 'any' implicite.",
        "File '{0}' not found.": "File '{0}' not found.",
        "File '{0}' must have extension '.ts' or '.d.ts'.": "File '{0}' must have extension '.ts' or '.d.ts'.",
        "Suppress noImplicitAny errors for indexing objects lacking index signatures.": "Suppress noImplicitAny errors for indexing objects lacking index signatures.",
        "Variable '{0}' implicitly has an '{1}' type.": "Variable '{0}' implicitly has an '{1}' type.",
        "Parameter '{0}' implicitly has an '{1}' type.": "Parameter '{0}' implicitly has an '{1}' type.",
        "Member '{0}' implicitly has an '{1}' type.": "Member '{0}' implicitly has an '{1}' type.",
        "'new' expression, whose target lacks a construct signature, implicitly has an 'any' type.": "'new' expression, whose target lacks a construct signature, implicitly has an 'any' type.",
        "'{0}', which lacks return-type annotation, implicitly has an '{1}' return type.": "'{0}', which lacks return-type annotation, implicitly has an '{1}' return type.",
        "Function expression, which lacks return-type annotation, implicitly has an '{0}' return type.": "Function expression, which lacks return-type annotation, implicitly has an '{0}' return type.",
        "Construct signature, which lacks return-type annotation, implicitly has an 'any' return type.": "Construct signature, which lacks return-type annotation, implicitly has an 'any' return type.",
        "Property '{0}' implicitly has type 'any', because its 'set' accessor lacks a type annotation.": "Property '{0}' implicitly has type 'any', because its 'set' accessor lacks a type annotation.",
        "Index signature of object type implicitly has an 'any' type.": "La signature d'index du type d'objet a implicitement un type 'any'.",
        "Object literal's property '{0}' implicitly has an '{1}' type.": "Object literal's property '{0}' implicitly has an '{1}' type.",
        "Rest parameter '{0}' implicitly has an 'any[]' type.": "Rest parameter '{0}' implicitly has an 'any[]' type.",
        "Call signature, which lacks return-type annotation, implicitly has an 'any' return type.": "Call signature, which lacks return-type annotation, implicitly has an 'any' return type.",
        "'{0}' implicitly has type 'any' because it is referenced directly or indirectly in its own type annotation.": "'{0}' implicitly has type 'any' because it is referenced directly or indirectly in its own type annotation.",
        "'{0}' implicitly has type 'any' because it is does not have a type annotation and is referenced directly or indirectly in its own initializer.": "'{0}' implicitly has type 'any' because it is does not have a type annotation and is referenced directly or indirectly in its own initializer.",
        "'{0}' implicitly has return type 'any' because it does not have a return type annotation and is referenced directly or indirectly in one of its return expressions.": "'{0}' implicitly has return type 'any' because it does not have a return type annotation and is referenced directly or indirectly in one of its return expressions.",
        "Function implicitly has return type 'any' because it does not have a return type annotation and is referenced directly or indirectly in one of its return expressions.": "Function implicitly has return type 'any' because it does not have a return type annotation and is referenced directly or indirectly in one of its return expressions.",
        "You cannot rename this element.": "You cannot rename this element.",
        "'yield' expressions are not currently supported.": "'yield' expressions are not currently supported.",
        "Generators are not currently supported.": "Generators are not currently supported.",
        "Computed property names are not currently supported.": "Computed property names are not currently supported."
}